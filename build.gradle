plugins {
    id "xyz.wagyourtail.unimined" version "1.1.0-SNAPSHOT" apply false
}

subprojects {
    apply plugin: "xyz.wagyourtail.unimined"

    unimined.minecraft(sourceSets.main, true) {
        version rootProject.minecraft_version
        mappings {
            mojmap()
            parchment(parchment_version.split("\\+")[0], parchment_version.split("\\+")[1])
        }
    }

    repositories {
        maven {
            name = "architectury"
            url = "https://maven.architectury.dev/"
        }
    }

    dependencies {
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.mod_version + "+" + rootProject.minecraft_version
    group = rootProject.maven_group

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    repositories {
        maven {
            name = "ldtteam"
            url = "https://maven.parchmentmc.net/"
        }
        mavenCentral()
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }
}

task fabricDist(type: Copy) {
    from new File(project(":fabric").buildDir, "libs")
    into new File(project.rootDir, "dist")
}


task forgeDist(type: Copy) {
    from new File(project(":forge").buildDir, "libs")
    into new File(project.rootDir, "dist")
}

task clearDist(type: Delete) {
    delete new File(project.rootDir, "dist")
}

task createDist(dependsOn: build) {}

createDist.finalizedBy fabricDist
createDist.finalizedBy forgeDist

clean.finalizedBy(clearDist)