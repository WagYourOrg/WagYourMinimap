plugins {
    id "com.github.johnrengelman.shadow" version "7.0.0"
}

version = version + "-fabric"

unimined.minecraft {
    fabric {
        loader rootProject.fabric_loader_version
    }
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
}

repositories {
    maven {
        name = 'Quilt'
        url = 'https://maven.quiltmc.org/repository/release'
    }
    maven {
        url "https://maven.terraformersmc.com/releases/"
    }
}

dependencies {
    modImplementation "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"
    modImplementation "dev.architectury:architectury-fabric:${rootProject.architectury_version}"

    common(project(path: ":common")) { transitive false }
    shadowCommon(project(path: ":common")) { transitive false }


    modImplementation "com.terraformersmc:modmenu:2.0.2"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowCommon]
    duplicatesStrategy DuplicatesStrategy.EXCLUDE
    archiveClassifier.set "dev-shadow"
}

remapJar {
    inputFile.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier.set null
}

jar {
    archiveClassifier.set "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    duplicatesStrategy DuplicatesStrategy.EXCLUDE
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenFabric(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}


task createDist(type: Copy) {
    from(new File(project.buildDir, "libs"))
    into new File(rootProject.rootDir, "dist")
}

build.finalizedBy(createDist)